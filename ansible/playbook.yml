- hosts: localhost
  become: yes
  vars_files:
    - vars/monitoring.yml

  collections:
    - community.docker

  vars:
    venv_path: /opt/ansible-venv
    python_executable: "{{ venv_path }}/bin/python"
    pip_executable: "{{ venv_path }}/bin/pip"

  tasks:
    - name: Ensure python3-venv is installed
      apt:
        name: python3-venv
        state: present
        update_cache: yes

    - name: Create a virtual environment for Ansible dependencies
      command:
        cmd: python3 -m venv {{ venv_path }}
      args:
        creates: "{{ venv_path }}/bin/activate"

    - name: Upgrade pip inside venv
      command:
        cmd: "{{ pip_executable }} install --upgrade pip"

    - name: Install Docker SDK and requests in venv
      command:
        cmd: "{{ pip_executable }} install docker==6.0.0 requests<2.32.0"

    - name: Remove APT-installed python3-docker
      apt:
        name: python3-docker
        state: absent

    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present

    - name: Ensure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Set Ansible Python interpreter to the venv
      set_fact:
        ansible_python_interpreter: "{{ python_executable }}"

    - name: Create monitoring network
      community.docker.docker_network:
        name: "{{ docker_network }}"

    - name: Create Prometheus config directory
      file:
        path: "{{ prometheus.config_dir }}"
        state: directory
        mode: "0755"

    - name: Copy Prometheus configuration
      copy:
        src: "files/{{ prometheus.config_file }}"
        dest: "{{ prometheus.config_dir }}/{{ prometheus.config_file }}"

    - name: Deploy Prometheus
      community.docker.docker_container:
        name: "{{ prometheus.container_name }}"
        image: "{{ prometheus.image }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        ports:
          - "{{ prometheus.port }}:{{ prometheus.port }}"
        volumes:
          - "{{ prometheus.volume_path }}:/etc/prometheus/{{ prometheus.config_file }}"

    - name: Create Grafana data directory
      file:
        path: "{{ grafana.data_dir }}"
        state: directory
        mode: "0755"

    - name: Deploy Grafana
      community.docker.docker_container:
        name: "{{ grafana.container_name }}"
        image: "{{ grafana.image }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        ports:
          - "{{ grafana.port }}:{{ grafana.port }}"
        volumes:
          - "{{ grafana.data_dir }}:/var/lib/grafana"
