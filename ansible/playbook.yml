- hosts: localhost
  become: yes
  vars_files:
    - vars/monitoring.yml

  collections:
    - community.docker

  vars:
    venv_path: /opt/ansible-venv
    python_executable: "{{ venv_path }}/bin/python"
    pip_executable: "{{ venv_path }}/bin/pip"

  tasks:
    - name: Ensure python3-venv is installed
      apt:
        name: python3-venv
        state: present
        update_cache: yes

    - name: Create a virtual environment for Ansible dependencies
      command:
        cmd: python3 -m venv {{ venv_path }}
      args:
        creates: "{{ venv_path }}/bin/activate"

    - name: Upgrade pip inside venv
      command:
        cmd: "{{ pip_executable }} install --upgrade pip"

    - name: Install Docker SDK and requests in venv
      command:
        cmd: "{{ pip_executable }} install docker==6.0.0 requests<2.32.0"

    - name: Remove APT-installed python3-docker
      apt:
        name: python3-docker
        state: absent

    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present

    - name: Ensure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Set Ansible Python interpreter to the venv
      set_fact:
        ansible_python_interpreter: "{{ python_executable }}"

    - name: Create monitoring network
      community.docker.docker_network:
        name: "{{ docker_network }}"

    - name: Create project directory for Compose
      file:
        path: "{{ project_dir }}"
        state: directory
        mode: '0755'

    - name: Copy docker-compose.yml to target
      copy:
        src: "{{ playbook_dir }}/../docker/management/monitoring/docker-compose.yml"
        dest: "{{ project_dir }}/docker-compose.yml"
        mode: '0644'
      delegate_to: localhost

    - name: Set Ansible Python interpreter to the venv
      set_fact:
        ansible_python_interpreter: "{{ python_executable }}"

    - name: Pull images & start services with Docker Compose v2
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        build: yes
        pull: yes
        restarted: yes

    # - name: Verify services are healthy
    #   community.docker.docker_compose_v2_exec:
    #     project_src: "{{ project_dir }}"
    #     service: grafana
    #     command: healthcheck
    #   register: grafana_health

    # - name: Debug Grafana health status
    #   debug:
    #     var: grafana_health